# Restaurant Roster Planning System
# Combined .gitignore for Django Backend + Next.js Frontend

# ===================================
# PYTHON / DJANGO BACKEND
# ===================================

# Python Cache
__pycache__/
*.py[cod]
*$py.class
*.so

# Virtual Environment
venv/
env/
ENV/
backend-env/
restaurant-env/

# Django specific
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Django Media and Static files
/media/
/static/
/staticfiles/

# Django Secret Key and Settings
.env
.env.local
.env.development
.env.production
secrets.json

# Django Migration files (optional - uncomment if you want to ignore)
# */migrations/*.py
# */migrations/*.pyc
# !*/migrations/__init__.py

# Django Test Coverage
htmlcov/
.coverage
.coverage.*
coverage.xml
*.cover
.hypothesis/
.pytest_cache/

# ===================================
# NODE.JS / NEXT.JS FRONTEND  
# ===================================

# Dependencies
node_modules/
frontend/node_modules/
package-lock.json*
yarn.lock*

# Next.js Build Output
.next/
out/
build/
dist/

# Next.js Cache
.swc/

# Environment Variables
.env
.env*.local
.env.development.local
.env.test.local
.env.production.local

# Vercel Deployment
.vercel

# Next.js Debug Files
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# TypeScript
*.tsbuildinfo
next-env.d.ts

# ===================================
# GENERAL DEVELOPMENT
# ===================================

# IDE and Editor Files
.vscode/
.idea/
*.swp
*.swo
*~

# OS Generated Files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Temporary Files
*.tmp
*.temp
.cache/

# Log Files
*.log
logs/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# ===================================
# PROJECT SPECIFIC
# ===================================

# Database Files
*.db
*.sqlite
*.sqlite3

# Configuration Files with Secrets
config/secrets.py
settings/production.py
.secrets

# Upload Directories
uploads/
user-uploads/

# Backup Files
*.bak
*.backup

# Documentation Build
docs/_build/
site/

# ===================================
# DOCKER (if using containerization)
# ===================================

# Docker
.dockerignore
docker-compose.override.yml
.docker/

# ===================================
# TESTING AND CI/CD
# ===================================

# Test Results
.pytest_cache/
.coverage
htmlcov/
.nyc_output
coverage/

# Storybook build outputs
storybook-static

# ===================================
# DEPLOYMENT
# ===================================

# Production Build Artifacts
build/
dist/
*.tgz
*.tar.gz

# Deployment Keys
*.pem
*.key
*.crt

# Railway/Heroku
Procfile.local

# ===================================
# MONITORING AND ANALYTICS
# ===================================

# Error Tracking
.sentryclirc

# Analytics
.next/analyze/# ===========================================
# .NET Core / C# Web API
# ===========================================

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Ww][Ii][Nn]32/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/
[Ll]ogs/

# Visual Studio 2015/2017 cache/options directory
.vs/

# Visual Studio Code
.vscode/

# User-specific files
*.rsuser
*.suo
*.user
*.userosscache
*.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Mono auto generated files
mono_crash.*

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Ww][Ii][Nn]32/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/
[Ll]ogs/

# NuGet
*.nupkg
*.snupkg
**/[Pp]ackages/*
!**/[Pp]ackages/build/
*.nuget.props
*.nuget.targets

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUnit
*.VisualState.xml
TestResult.xml
nunit-*.xml

# .NET Core
project.lock.json
project.fragment.lock.json
artifacts/

# ASP.NET Scaffolding
ScaffoldingReadMe.txt

# StyleCop
StyleCopReport.xml

# Files built by Visual Studio
*_i.c
*_p.c
*_h.h
*.ilk
*.meta
*.obj
*.iobj
*.pch
*.pdb
*.ipdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*_wpftmp.csproj
*.log
*.tlog
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Chutzpah Test files
_Chutzpah*

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opendb
*.opensdf
*.sdf
*.cachefile
*.VC.db
*.VC.VC.opendb

# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap

# Visual Studio Trace Files
*.e2e

# TFS 2012 Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# AxoCover is a Code Coverage Tool
.axoCover/*
!.axoCover/settings.json

# Coverlet is a free, cross platform Code Coverage Tool
coverage*.json
coverage*.xml
coverage*.info

# Visual Studio code coverage results
*.coverage
*.coveragexml

# NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
*.pubxml
*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be encrypted
PublishScripts/

# NuGet Packages
*.nupkg
*.snupkg
**/[Pp]ackages/*
!**/[Pp]ackages/build/
*.nuget.props
*.nuget.targets

# Microsoft Azure Build Output
csx/
*.build.csdef

# Microsoft Azure Emulator
ecf/
rcf/

# Windows Store app package directories and files
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt
*.appx
*.appxbundle
*.appxupload

# Visual Studio cache files
*.suo
*.user
*.sln.docstates

# ===========================================
# Next.js / Node.js
# ===========================================

# Dependencies
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*

# Next.js build output
.next/
out/

# Production build
/build
/dist

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage
.grunt

# Bower dependency directory
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons
build/Release

# Dependency directories
jspm_packages/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Vercel
.vercel

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# ===========================================
# General / OS / IDE
# ===========================================

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# JetBrains IDEs (WebStorm, IntelliJ, etc.)
.idea/
*.swp
*.swo
*~

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
.netrwhist

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# Windows image file caches
Thumbs.db
ehthumbs.db
Desktop.ini

# Folder config file
.DS_Store

# Recycle Bin used on file shares
$RECYCLE.BIN/

# ===========================================
# Project Specific
# ===========================================

# Database
*.db
*.db-shm
*.db-wal
*.sqlite
*.sqlite3

# Logs
logs/
*.log

# Temporary files
tmp/
temp/

# Config files with sensitive data
appsettings.Development.json
appsettings.Local.json
*.secrets.json

# SSL certificates
*.pfx
*.p12
*.key
*.crt
*.pem

CLAUDE.md