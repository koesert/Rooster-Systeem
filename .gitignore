# Restaurant Roster Planning System
# Combined .gitignore for Django Backend + Next.js Frontend

# ===================================
# PYTHON / DJANGO BACKEND
# ===================================

# Python Cache
__pycache__/
*.py[cod]
*$py.class
*.so

# Virtual Environment
venv/
env/
ENV/
backend-env/
restaurant-env/

# Django specific
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Django Media and Static files
/media/
/static/
/staticfiles/

# Django Secret Key and Settings
.env
.env.local
.env.development
.env.production
secrets.json

# Django Migration files (optional - uncomment if you want to ignore)
# */migrations/*.py
# */migrations/*.pyc
# !*/migrations/__init__.py

# Django Test Coverage
htmlcov/
.coverage
.coverage.*
coverage.xml
*.cover
.hypothesis/
.pytest_cache/

# ===================================
# NODE.JS / NEXT.JS FRONTEND  
# ===================================

# Dependencies
node_modules/
frontend/node_modules/
package-lock.json*
yarn.lock*

# Next.js Build Output
.next/
out/
build/
dist/

# Next.js Cache
.swc/

# Environment Variables
.env
.env*.local
.env.development.local
.env.test.local
.env.production.local

# Vercel Deployment
.vercel

# Next.js Debug Files
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# TypeScript
*.tsbuildinfo
next-env.d.ts

# ===================================
# GENERAL DEVELOPMENT
# ===================================

# IDE and Editor Files
.vscode/
.idea/
*.swp
*.swo
*~

# OS Generated Files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Temporary Files
*.tmp
*.temp
.cache/

# Log Files
*.log
logs/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# ===================================
# PROJECT SPECIFIC
# ===================================

# Database Files
*.db
*.sqlite
*.sqlite3

# Configuration Files with Secrets
config/secrets.py
settings/production.py
.secrets

# Upload Directories
uploads/
user-uploads/

# Backup Files
*.bak
*.backup

# Documentation Build
docs/_build/
site/

# ===================================
# DOCKER (if using containerization)
# ===================================

# Docker
.dockerignore
docker-compose.override.yml
.docker/

# ===================================
# TESTING AND CI/CD
# ===================================

# Test Results
.pytest_cache/
.coverage
htmlcov/
.nyc_output
coverage/

# Storybook build outputs
storybook-static

# ===================================
# DEPLOYMENT
# ===================================

# Production Build Artifacts
build/
dist/
*.tgz
*.tar.gz

# Deployment Keys
*.pem
*.key
*.crt

# Railway/Heroku
Procfile.local

# ===================================
# MONITORING AND ANALYTICS
# ===================================

# Error Tracking
.sentryclirc

# Analytics
.next/analyze/