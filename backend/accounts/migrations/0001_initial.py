# Generated by Django 5.2.3 on 2025-06-16 21:07

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, verbose_name='Bedrijfsnaam')),
                ('company_code', models.CharField(help_text='Unieke 8-karakter code voor werknemersregistratie', max_length=8, unique=True, verbose_name='Bedrijfscode')),
                ('address', models.TextField(blank=True, verbose_name='Adres')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Telefoon')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='E-mail')),
                ('cuisine_type', models.CharField(blank=True, max_length=100, verbose_name='Keukentype')),
                ('max_employees', models.PositiveIntegerField(default=50, verbose_name='Maximum werknemers')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Actief')),
            ],
            options={
                'verbose_name': 'Bedrijf',
                'verbose_name_plural': 'Bedrijven',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('employee', 'Werknemer'), ('shift_supervisor', 'Ploegbaas'), ('manager', 'Manager'), ('owner', 'Eigenaar')], default='employee', max_length=20, verbose_name='Rol')),
                ('function', models.CharField(choices=[('server', 'Bediening'), ('kitchen', 'Keuken'), ('bartender', 'Barman/vrouw'), ('host', 'Gastheer/vrouw'), ('cleaner', 'Schoonmaak'), ('delivery', 'Bezorger'), ('manager', 'Manager')], max_length=20, verbose_name='Functie')),
                ('phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message='Geldig telefoonnummer vereist', regex='^\\+?1?\\d{9,15}$')], verbose_name='Telefoonnummer')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Geboortedatum')),
                ('employee_number', models.CharField(max_length=20, unique=True, verbose_name='Personeelsnummer')),
                ('hire_date', models.DateField(blank=True, null=True, verbose_name='Datum in dienst')),
                ('hourly_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Uurloon')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Goedgekeurd door manager')),
                ('approved_at', models.DateTimeField(blank=True, null=True, verbose_name='Goedgekeurd op')),
                ('email_verified', models.BooleanField(default=False, verbose_name='E-mail geverifieerd')),
                ('email_verification_token', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_employees', to=settings.AUTH_USER_MODEL, verbose_name='Goedgekeurd door')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.company', verbose_name='Bedrijf')),
            ],
            options={
                'verbose_name': 'Gebruiker',
                'verbose_name_plural': 'Gebruikers',
                'ordering': ['last_name', 'first_name'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='RegistrationRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, verbose_name='E-mailadres')),
                ('first_name', models.CharField(max_length=150, verbose_name='Voornaam')),
                ('last_name', models.CharField(max_length=150, verbose_name='Achternaam')),
                ('phone', models.CharField(max_length=15, verbose_name='Telefoonnummer')),
                ('function', models.CharField(choices=[('server', 'Bediening'), ('kitchen', 'Keuken'), ('bartender', 'Barman/vrouw'), ('host', 'Gastheer/vrouw'), ('cleaner', 'Schoonmaak'), ('delivery', 'Bezorger'), ('manager', 'Manager')], max_length=20, verbose_name='Functie')),
                ('company_code_entered', models.CharField(max_length=8, verbose_name='Ingevoerde bedrijfscode')),
                ('status', models.CharField(choices=[('pending', 'In afwachting'), ('approved', 'Goedgekeurd'), ('rejected', 'Afgewezen')], default='pending', max_length=20, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Aangevraagd op')),
                ('reviewed_at', models.DateTimeField(blank=True, null=True, verbose_name='Behandeld op')),
                ('rejection_reason', models.TextField(blank=True, verbose_name='Reden afwijzing')),
                ('verification_token', models.CharField(max_length=100, unique=True, verbose_name='Verificatie token')),
                ('email_verified', models.BooleanField(default=False, verbose_name='E-mail geverifieerd')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.company', verbose_name='Bedrijf')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Behandeld door')),
            ],
            options={
                'verbose_name': 'Registratie verzoek',
                'verbose_name_plural': 'Registratie verzoeken',
                'ordering': ['-created_at'],
                'unique_together': {('email', 'company')},
            },
        ),
    ]
